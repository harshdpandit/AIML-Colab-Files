# -*- coding: utf-8 -*-
"""H036 AIML Lab 9.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1RdQkV4Jo7OFD1YiSuvC4G5DZiEVXhEpE

Aim: To fit a best fit line for given data set and estimate the value of price for given area of 3500.
"""

#importing all relevant packages
import pandas as pd
import matplotlib.pyplot as plt
from sklearn.linear_model import LinearRegression

df=pd.read_excel('H036 Harsh Pandit AIML lab 9.xlsx')
#importing the data frame form excel
x=df[['Area']]
y=df[['Price ($)']]
#assigning the independent and dependent variable

#creating a linear regression model
model=LinearRegression()
model.fit(x,y)

#finding put the value of slope, intercept and r squared
slope=float(model.coef_)
intercept=float(model.intercept_)
print('The equation of line is y= {}*x + {}'.format(slope,intercept))
r_sq=model.score(x,y)
print('The r-squared value is : {}'.format(r_sq))
print('The value of intercept is : {}'.format(intercept))
print('The value of slope is : {}'.format(slope))

#predicting the value of price based on made model
new_df=df
new_df['y^']=model.predict(x)

new_df

#plotting the line and original values
ypred=new_df['y^']
plt.scatter(x,y,color='green',marker='o')
plt.xlabel('Area')
plt.ylabel('Price')
plt.plot(x,ypred,color='black')

price=float(model.predict([[3500]]))
print('Print for the area of 3500, price is: {} $'.format(price))

#####################################################################################
#importing all relevant packages
import pandas as pd
import matplotlib.pyplot as plt
from sklearn.linear_model import LinearRegression
df=pd.read_excel('H036 Harsh Pandit AIML lab 9.xlsx')
#importing the data frame form excel
x=df[['Area']]
y=df[['Price ($)']]
#assigning the independent and dependent variable
#creating a linear regression model
model=LinearRegression()
model.fit(x,y)
slope=float(model.coef_)
intercept=float(model.intercept_)
r_sq=model.score(x,y)
#predicting the value of price based on made model
new_df=df
new_df['y^']=model.predict(x)
price=float(model.predict([[3500]]))
print('The equation of line is y= {}*x + {}'.format(slope,intercept))
print('The r-squared value is : {}'.format(r_sq))
print('The value of intercept is : {}'.format(intercept))
print('The value of slope is : {}'.format(slope))
print('Price for the area of 3500, price is: {} $'.format(price))
print(new_df)
#plotting the line and original values
ypred=new_df['y^']
plt.scatter(x,y,color='green',marker='o')
plt.xlabel('Area')
plt.ylabel('Price')
plt.plot(x,ypred,color='black')

