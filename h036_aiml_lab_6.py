# -*- coding: utf-8 -*-
"""H036 AIML Lab 6.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/16SiOKIz4qIpGR8J-Vm_JvQlTi9qHr09b

Aim: Perform a forward pass and backward pass on the network.
"""

#Harsh Pandit H036
#inputs x1 and x2
from math import e as e
import pandas as pd
output_from_neuron_1=0.35
x1=output_from_neuron_1
output_from_neuron_2=0.9
x2=output_from_neuron_2
w13=0.1
w14=0.4
w23=0.8
w24=0.6
w35=0.3
w45=0.9
target=0.5
alpha=1
epoch_val=[]
df=pd.DataFrame()


def calculate_delta_ouptut(yout,target):
  temp_val=yout*(1-yout)*(target-yout)
  return temp_val

def calculate_delta_hidden(yout,delta,weight):
  temp_val=yout*(1-yout)*weight*delta
  return temp_val

def change_in_weight(weight,alpha,delta,output):
  return weight+(alpha*delta*output)

def find_sigmoid(x):
  return (1/(1 + (e**(-x))))

def calculate_y_input(w1,x1,w2,x2):
  return ((x1*w1)+(x2*w2))

epochs=101
for i in range(epochs):
  en='Epoch '+str(i)
  x={'Epoch':en,'w13':w13,'w14':w14,'w23':w23,'w24':w24,'w35':w35,'w45':w45}
  df=df.append(x,ignore_index=True)

  yin3=calculate_y_input(w13,x1,w23,x2)
  yout3=find_sigmoid(yin3)

  yin4=calculate_y_input(w14,x1,w24,x2)
  yout4=find_sigmoid(yin4)

  yin5=calculate_y_input(w35,yout3,w45,yout4)
  yout5=find_sigmoid(yin5)

  error=yout5-target
  error_perc=(error/target)*100

  if error_perc<0.5:
    epoch_val.append(i)

  delta5=calculate_delta_ouptut(yout5,target)
  delta3=calculate_delta_hidden(yout3,delta5,w35)
  delta4=calculate_delta_hidden(yout4,delta5,w45)
  delta1=calculate_delta_hidden(x1,delta3,w13)
  delta2=calculate_delta_hidden(x2,delta4,w13)

  w13=change_in_weight(w13,alpha,delta3,x1)
  w14=change_in_weight(w14,alpha,delta4,x1)
  w23=change_in_weight(w23,alpha,delta3,x2)
  w24=change_in_weight(w24,alpha,delta4,x2)
  w35=change_in_weight(w35,alpha,delta5,yout3)
  w45=change_in_weight(w45,alpha,delta5,yout4)



print('The weights are as follows:')
print(df)
print('The first epoch where we get acceptable error is:')
print(epoch_val[0])

df

epoch_val

